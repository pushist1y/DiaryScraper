// <auto-generated />
using DiaryScraperCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Microsoft.EntityFrameworkCore.ValueGeneration;
using System;

namespace DiaryScraperCore.Migrations
{
    [DbContext(typeof(ScrapeContext))]
    partial class ScrapeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("DiaryScraperCore.DownloadResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("LocalPath");

                    b.Property<string>("Url")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasAlternateKey("Url");

                    b.ToTable("DownloadResource");

                    b.HasDiscriminator<string>("Discriminator").HasValue("DownloadResource");
                });

            modelBuilder.Entity("DiaryScraperCore.DiaryDatePage", b =>
                {
                    b.HasBaseType("DiaryScraperCore.DownloadResource");

                    b.Property<DateTime>("PostDate");

                    b.ToTable("DiaryDatePage");

                    b.HasDiscriminator().HasValue("DiaryDatePage");
                });

            modelBuilder.Entity("DiaryScraperCore.DiaryImage", b =>
                {
                    b.HasBaseType("DiaryScraperCore.DownloadResource");


                    b.ToTable("DiaryImage");

                    b.HasDiscriminator().HasValue("DiaryImage");
                });

            modelBuilder.Entity("DiaryScraperCore.DiaryPost", b =>
                {
                    b.HasBaseType("DiaryScraperCore.DownloadResource");


                    b.ToTable("DiaryPost");

                    b.HasDiscriminator().HasValue("DiaryPost");
                });

            modelBuilder.Entity("DiaryScraperCore.DiaryPostEdit", b =>
                {
                    b.HasBaseType("DiaryScraperCore.DownloadResource");

                    b.Property<int>("PostId");

                    b.HasIndex("PostId")
                        .IsUnique();

                    b.ToTable("DiaryPostEdit");

                    b.HasDiscriminator().HasValue("DiaryPostEdit");
                });

            modelBuilder.Entity("DiaryScraperCore.DiaryPostEdit", b =>
                {
                    b.HasOne("DiaryScraperCore.DiaryPost", "Post")
                        .WithOne("PostEdit")
                        .HasForeignKey("DiaryScraperCore.DiaryPostEdit", "PostId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
